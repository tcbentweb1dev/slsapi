/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Loan } from "@prisma/client";

export class LoanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LoanCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanCountArgs>
  ): Promise<number> {
    return this.prisma.loan.count(args);
  }

  async loans<T extends Prisma.LoanFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanFindManyArgs>
  ): Promise<Loan[]> {
    return this.prisma.loan.findMany(args);
  }
  async loan<T extends Prisma.LoanFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanFindUniqueArgs>
  ): Promise<Loan | null> {
    return this.prisma.loan.findUnique(args);
  }
  async createLoan<T extends Prisma.LoanCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanCreateArgs>
  ): Promise<Loan> {
    return this.prisma.loan.create<T>(args);
  }
  async updateLoan<T extends Prisma.LoanUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanUpdateArgs>
  ): Promise<Loan> {
    return this.prisma.loan.update<T>(args);
  }
  async deleteLoan<T extends Prisma.LoanDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LoanDeleteArgs>
  ): Promise<Loan> {
    return this.prisma.loan.delete(args);
  }
}
